#  ██████╗ ██╗ ██████╗ ██████╗ ███╗   ███╗
#  ██╔══██╗██║██╔════╝██╔═══██╗████╗ ████║	gh0stzk
#  ██████╔╝██║██║     ██║   ██║██╔████╔██║	https://github.com/gh0stzk/dotfiles
#  ██╔═══╝ ██║██║     ██║   ██║██║╚██╔╝██║	01.10.2024 15:46:41
#  ██║     ██║╚██████╗╚██████╔╝██║ ╚═╝ ██║
#  ╚═╝     ╚═╝ ╚═════╝ ╚═════╝ ╚═╝     ╚═╝


## ----- Shadows ----- ##

shadow = false;

## ----- Fading ----- ##

fading = true;

fade-in-step = 0.01;
fade-out-step = 0.01;
fade-delta = 1;
no-fading-openclose = false
no-fading-destroyed-argb = false

## ----- Transparency ----- ##

frame-opacity = 1.0;

# inactive-dim-fixed = true

## ----- Corners ----- ##

corner-radius = 12

#################################
#       General Settings        #
#################################

# Available backends "xrender" "glx" "egl"
backend = "glx"

dithered-present = false;
vsync = true;

detect-rounded-corners = true;
detect-client-opacity = true;
detect-transient = true;

use-damage = true;
# xrender-sync-fence = false
# transparent-clipping = false

#################################
#             Rules             #
#################################

blur:

	{
		method = "gaussian";
		size = 10;
		deviation = 2.5;
	}

rules: (

	{
		blur-background = false;
		fade = false;
	},

	{
		match = "window_type = 'normal'";
		fade = true;	#-fade-switch
		shadow = true;	#-shadow-switch
	},

	{
		match = "window_type = 'dialog'";
		shadow = true;	#-shadow-switch
	},

	{
		match = "window_type = 'tooltip'";
		corner-radius = 0;
		opacity = 0.90;
	},

    {
		match = "fullscreen";
		corner-radius = 0;
	},

	{
		match = "class_g = 'dwm'";
		corner-radius = 0;
		fade = true;
	},

	{
		match = "window_type = 'dropdown_menu' || window_type = 'menu' || window_type = 'popup' || window_type = 'popup_menu'";
		corner-radius = 0;
	},

    {
        # Fix shadow related bugs on small UI elements
        match = "window_type = 'menu' || role = 'popup' || role = 'bubble'";
        shadow = false;
    },

	{
		match = "class_g = 'rio'	|| class_g = 'kitty' || class_g = 'FloaTerm'";
		opacity = 1.0;	#-term-opacity-switch
		blur-background = false;	#-blur-switch
	},

	{
		match = "class_g = 'Rofi'		|| "
				"class_g = 'Dunst'		|| "
		corner-radius = 0;
	},

	{
		match = "name = 'Notification'		|| "
				"class_g ?= 'Notify-osd'    || "
				"class_g = 'Dunst'			|| "
				"class_g = 'Rofi'			|| "
				"_GTK_FRAME_EXTENTS@";
		shadow = false;
	},

  {
        match = "window_type = 'normal'";
        animations = (
            {
                triggers = ["close"];
                opacity = {
                    curve = "cubic-bezier(0,0,0,0)";
                    duration = 0.1;
                    start = "window-raw-opacity-before";
                    end = 0;
                };
                blur-opacity = "opacity";
                shadow-opacity = "opacity";

                scale-x = {
                    curve = "cubic-bezier(0,0,0,0)";
                    duration = 0.1;
                    start = 1;
                    end = 0.1;
                };
                scale-y = "scale-x";

                offset-x = "(1 - scale-x) / 2 * window-width";
                offset-y = "(1 - scale-y) / 2 * window-height";

                shadow-scale-x = "scale-x";
                shadow-scale-y = "scale-y";
                shadow-offset-x = "offset-x";
                shadow-offset-y = "offset-y";
            },

            # Animación de APERTURA
            {
                triggers = ["open"];
                opacity = {
                    curve = "cubic-bezier(0,0,0,0)";
                    duration = 0.1;
                    start = 0;
                    end = "window-raw-opacity";
                };
                blur-opacity = "opacity";
                shadow-opacity = "opacity";

                scale-x = {
                    curve = "cubic-bezier(0,0,0,0)";
                    duration = 0.1;
                    start = 0.1;
                    end = 1;
                };
                scale-y = "scale-x";

                offset-x = "(1 - scale-x) / 2 * window-width";
                offset-y = "(1 - scale-y) / 2 * window-height";

                shadow-scale-x = "scale-x";
                shadow-scale-y = "scale-y";
                shadow-offset-x = "offset-x";
                shadow-offset-y = "offset-y";
            },

            # Animación de GEOMETRÍA (modificada para ambos casos)
            {
                triggers = ["geometry"];
                # Cuando la ventana CRECE (abrir/mover/redimensionar)
                scale-x = {
                    curve = "cubic-bezier(0,0,0,0)";
                    duration = 0.1;
                    start = "window-width-before / window-width";
                    end = 1;
                };

                # Cuando la ventana ENCOGE (cerrar/mover/redimensionar)
                scale-x-reverse = {
                    curve = "cubic-bezier(0,0,0,0)";
                    duration = 0.1;
                    start = "window-width / window-width-before";
                    end = 1;
                };
                scale-y = {
                    curve = "cubic-bezier(0,0,0,0)";
                    duration = 0.1;
                    start = "window-height-before / window-height";
                    end = 1;
                };
                scale-y-reverse = {
                    curve = "cubic-bezier(0,0,0,0)";
                    duration = 0.1;
                    start = "window-height / window-height-before";
                    end = 1;
                };
                offset-x = {
                    curve = "cubic-bezier(0,0,0,0)";
                    duration = 0.1;
                    start = "window-x-before - window-x";
                    end = 0;
                };
                offset-y = {
                    curve = "cubic-bezier(0,0,0,0)";
                    duration = 0.1;
                    start = "window-y-before - window-y";
                    end = 0;
                };
                shadow-scale-x = "scale-x";
                shadow-scale-y = "scale-y";
                shadow-offset-x = "offset-x";
                shadow-offset-y = "offset-y";
            }
        )
    },
)
