--- config.def.h.orig	2025-10-06 00:36:11.691279625 +0200
+++ config.def.h	2025-10-06 00:37:13.876403757 +0200
@@ -5,6 +5,7 @@
 static const unsigned int snap      = 32;       /* snap pixel */
 static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
+static const unsigned int gappx     = 12;
 static const char *fonts[]          = { "monospace:size=10" };
 static const char dmenufont[]       = "monospace:size=10";
 static const char col_gray1[]       = "#222222";
@@ -40,6 +41,7 @@
 
 static const Layout layouts[] = {
 	/* symbol     arrange function */
+	{ "III",      horizontal },
 	{ "[]=",      tile },    /* first entry is default */
 	{ "><>",      NULL },    /* no layout function means floating behavior */
 	{ "[M]",      monocle },
--- dwm.c.orig	2025-10-06 00:36:11.691279625 +0200
+++ dwm.c	2025-10-06 00:39:45.851238345 +0200
@@ -174,6 +174,7 @@
 static int gettextprop(Window w, Atom atom, char *text, unsigned int size);
 static void grabbuttons(Client *c, int focused);
 static void grabkeys(void);
+static void horizontal(Monitor *m);
 static void incnmaster(const Arg *arg);
 static void keypress(XEvent *e);
 static void killclient(const Arg *arg);
@@ -977,6 +978,24 @@
 }
 
 void
+horizontal(Monitor *m)
+{
+	Client *c;
+	unsigned int n, i;
+	int w;
+
+	/* Count windows */
+	for(n = 0, c = nexttiled(m->clients); c; c = nexttiled(c->next), n++);
+
+	if(n == 0)
+		return;
+
+	w = (m->ww - (n + 1) * gappx) / n;
+	for(i = 0, c = nexttiled(m->clients); c; c = nexttiled(c->next), i++)
+		resize(c, m->wx + gappx + i * (w + gappx), m->wy + gappx, w - (2*c->bw), m->wh - 2*gappx - (2*c->bw), False);
+}
+
+void
 incnmaster(const Arg *arg)
 {
 	selmon->nmaster = MAX(selmon->nmaster + arg->i, 0);